/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query';

import type { Pet } from '../schemas/Pet';
import { fetcher, FetcherOptions } from './fetcher';

export interface UseFindPetsByTagsQueryQueryParams {
	tags?: string[];
}

export type FindPetsByTagsOkResponse = Pet[];

export type FindPetsByTagsErrorResponse = unknown;

export interface FindPetsByTagsProps
	extends Omit<FetcherOptions<UseFindPetsByTagsQueryQueryParams, unknown>, 'url'> {
	queryParams: UseFindPetsByTagsQueryQueryParams;
}

export function findPetsByTags(props: FindPetsByTagsProps): Promise<FindPetsByTagsOkResponse> {
	const { ...rest } = props;

	return fetcher<FindPetsByTagsOkResponse, UseFindPetsByTagsQueryQueryParams, unknown>({
		url: `/pet/findByTags`,
		method: 'GET',
		...rest,
	});
}

/**
 * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
 */
export function useFindPetsByTagsQuery(
	props: FindPetsByTagsProps,
	options: Omit<
		UseQueryOptions<FindPetsByTagsOkResponse, FindPetsByTagsErrorResponse>,
		'queryKey' | 'queryFn'
	>,
) {
	return useQuery<FindPetsByTagsOkResponse, FindPetsByTagsErrorResponse>(
		['findPetsByTags'],
		({ signal }) => findPetsByTags({ ...props, signal }),
		options,
	);
}
