/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import type { NullableLicenseSimple } from '../schemas/NullableLicenseSimple';
import type { NullableSimpleUser } from '../schemas/NullableSimpleUser';
import type { SimpleUser } from '../schemas/SimpleUser';

/**
 * A repository on GitHub.
 */

export interface Repository {
	/**
	 * Whether to allow Auto-merge to be used on pull requests.
	 */
	allow_auto_merge?: boolean;
	/**
	 * Whether to allow forking this repo
	 */
	allow_forking?: boolean;
	/**
	 * Whether to allow merge commits for pull requests.
	 * @default true
	 * @example true
	 */
	allow_merge_commit?: boolean;
	/**
	 * Whether to allow rebase merges for pull requests.
	 * @default true
	 * @example true
	 */
	allow_rebase_merge?: boolean;
	/**
	 * Whether to allow squash merges for pull requests.
	 * @default true
	 * @example true
	 */
	allow_squash_merge?: boolean;
	/**
	 * Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
	 */
	allow_update_branch?: boolean;
	/**
	 * Whether anonymous git access is enabled for this repository
	 */
	anonymous_access_enabled?: boolean;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
	 */
	archive_url: string;
	/**
	 * Whether the repository is archived.
	 */
	archived: boolean;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
	 */
	assignees_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
	 */
	blobs_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
	 */
	branches_url: string;
	/**
	 * @example "https://github.com/octocat/Hello-World.git"
	 */
	clone_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
	 */
	collaborators_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
	 */
	comments_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
	 */
	commits_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
	 */
	compare_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
	 */
	contents_url: string;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/contributors"
	 */
	contributors_url: string;
	/**
	 * @format date-time
	 * @example "2011-01-26T19:01:12Z"
	 */
	created_at: string | null;
	/**
	 * The default branch of the repository.
	 * @example "master"
	 */
	default_branch: string;
	/**
	 * Whether to delete head branches when pull requests are merged
	 */
	delete_branch_on_merge?: boolean;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/deployments"
	 */
	deployments_url: string;
	/**
	 * @example "This your first repo!"
	 */
	description: string | null;
	/**
	 * Returns whether or not this repository disabled.
	 */
	disabled: boolean;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/downloads"
	 */
	downloads_url: string;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/events"
	 */
	events_url: string;
	fork: boolean;
	forks: number;
	/**
	 * @example 9
	 */
	forks_count: number;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/forks"
	 */
	forks_url: string;
	/**
	 * @example "octocat/Hello-World"
	 */
	full_name: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
	 */
	git_commits_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
	 */
	git_refs_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
	 */
	git_tags_url: string;
	/**
	 * @example "git:github.com/octocat/Hello-World.git"
	 */
	git_url: string;
	/**
	 * Whether downloads are enabled.
	 * @default true
	 * @example true
	 */
	has_downloads: boolean;
	/**
	 * Whether issues are enabled.
	 * @default true
	 * @example true
	 */
	has_issues: boolean;
	has_pages: boolean;
	/**
	 * Whether projects are enabled.
	 * @default true
	 * @example true
	 */
	has_projects: boolean;
	/**
	 * Whether the wiki is enabled.
	 * @default true
	 * @example true
	 */
	has_wiki: boolean;
	/**
	 * @format uri
	 * @example "https://github.com"
	 */
	homepage: string | null;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/hooks"
	 */
	hooks_url: string;
	/**
	 * @format uri
	 * @example "https://github.com/octocat/Hello-World"
	 */
	html_url: string;
	/**
	 * Unique identifier of the repository
	 * @example 42
	 */
	id: number;
	/**
	 * Whether this repository acts as a template that can be used to generate new repositories.
	 * @example true
	 */
	is_template?: boolean;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
	 */
	issue_comment_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
	 */
	issue_events_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
	 */
	issues_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
	 */
	keys_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
	 */
	labels_url: string;
	language: string | null;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/languages"
	 */
	languages_url: string;
	license: NullableLicenseSimple;
	master_branch?: string;
	/**
	 * The default value for a merge commit message.
	 *
	 * - `PR_TITLE` - default to the pull request's title.
	 * - `PR_BODY` - default to the pull request's body.
	 * - `BLANK` - default to a blank commit message.
	 */
	merge_commit_message?: 'BLANK' | 'PR_BODY' | 'PR_TITLE';
	/**
	 * The default value for a merge commit title.
	 *
	 * - `PR_TITLE` - default to the pull request's title.
	 * - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
	 */
	merge_commit_title?: 'MERGE_MESSAGE' | 'PR_TITLE';
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/merges"
	 */
	merges_url: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
	 */
	milestones_url: string;
	/**
	 * @format uri
	 * @example "git:git.example.com/octocat/Hello-World"
	 */
	mirror_url: string | null;
	/**
	 * The name of the repository.
	 * @example "Team Environment"
	 */
	name: string;
	network_count?: number;
	/**
	 * @example "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
	 */
	node_id: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
	 */
	notifications_url: string;
	open_issues: number;
	/**
	 * @example 0
	 */
	open_issues_count: number;
	organization?: NullableSimpleUser;
	owner: SimpleUser;
	permissions?: unknown;
	/**
	 * Whether the repository is private or public.
	 */
	private: boolean;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
	 */
	pulls_url: string;
	/**
	 * @format date-time
	 * @example "2011-01-26T19:06:43Z"
	 */
	pushed_at: string | null;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
	 */
	releases_url: string;
	/**
	 * The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.
	 * @example 108
	 */
	size: number;
	/**
	 * The default value for a squash merge commit message:
	 *
	 * - `PR_BODY` - default to the pull request's body.
	 * - `COMMIT_MESSAGES` - default to the branch's commit messages.
	 * - `BLANK` - default to a blank commit message.
	 */
	squash_merge_commit_message?: 'BLANK' | 'COMMIT_MESSAGES' | 'PR_BODY';
	/**
	 * The default value for a squash merge commit title:
	 *
	 * - `PR_TITLE` - default to the pull request's title.
	 * - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
	 */
	squash_merge_commit_title?: 'COMMIT_OR_PR_TITLE' | 'PR_TITLE';
	/**
	 * @example "git@github.com:octocat/Hello-World.git"
	 */
	ssh_url: string;
	/**
	 * @example 80
	 */
	stargazers_count: number;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/stargazers"
	 */
	stargazers_url: string;
	/**
	 * @example "\"2020-07-09T00:17:42Z\""
	 */
	starred_at?: string;
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
	 */
	statuses_url: string;
	subscribers_count?: number;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/subscribers"
	 */
	subscribers_url: string;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/subscription"
	 */
	subscription_url: string;
	/**
	 * @format uri
	 * @example "https://svn.github.com/octocat/Hello-World"
	 */
	svn_url: string;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/tags"
	 */
	tags_url: string;
	/**
	 * @format uri
	 * @example "http://api.github.com/repos/octocat/Hello-World/teams"
	 */
	teams_url: string;
	temp_clone_token?: string;
	template_repository?: unknown | null;
	topics?: string[];
	/**
	 * @example "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
	 */
	trees_url: string;
	/**
	 * @format date-time
	 * @example "2011-01-26T19:14:43Z"
	 */
	updated_at: string | null;
	/**
	 * @format uri
	 * @example "https://api.github.com/repos/octocat/Hello-World"
	 */
	url: string;
	/**
	 * Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.
	 * @deprecated
	 */
	use_squash_pr_title_as_default?: boolean;
	/**
	 * The repository visibility: public, private, or internal.
	 * @default "public"
	 */
	visibility?: string;
	watchers: number;
	/**
	 * @example 80
	 */
	watchers_count: number;
	/**
	 * Whether to require contributors to sign off on web-based commits
	 */
	web_commit_signoff_required?: boolean;
}
