export type {{okResponseName}}<T> = T extends {{project.pathParamsName}}
  ? ResponseWithPagination<{{project.okResponseName}}>
  : T extends {{org.pathParamsName}}
  ? ResponseWithPagination<{{org.okResponseName}}>
  : ResponseWithPagination<{{account.okResponseName}}>;

export type {{errorResponseName}}<T> = T extends {{project.pathParamsName}}
    ? {{project.errorResponseName}}
    : T extends {{org.pathParamsName}}
    ? {{org.errorResponseName}}
    : {{account.errorResponseName}};

export interface {{fetcherPropsName}} extends
  Omit<FetcherOptions<
    {% if queryParamsCode -%}{{queryParamsName}}{% else %}unknown{%- endif %},
    {% if requestBodyCode %}{{requestBodyName}}{% else %}unknown{%- endif %}
    {% if headerParamsCode %},{{headerParamsName}}{%- endif %}
  >, 'url'> {
    pathParams: {{account.pathParamsName}} | {{org.pathParamsName}} | {{project.pathParamsName}};
    {% if queryParamsCode -%}
    queryParams: {{queryParamsName}};
    {%- endif %}
    {%- if requestBodyCode %}
    body: {{requestBodyName}};
    {%- endif %}
}

function isProjectPathParams(pathParams: {{fetcherPropsName}}['pathParams']): pathParams is {{project.pathParamsName}} {
  return !!(
    (pathParams as {{project.pathParamsName}}).org &&
    (pathParams as {{project.pathParamsName}}).project
  )
}

function isOrgPathParams(pathParams: {{fetcherPropsName}}['pathParams']): pathParams is {{org.pathParamsName}} {
  return !!(
    (pathParams as {{org.pathParamsName}}).org &&
    !(pathParams as {{project.pathParamsName}}).project
  )
}


export function {{fetcherName}}<T extends {{fetcherPropsName}} = {{fetcherPropsName}}>(
  props: T
): Promise<{{okResponseName}}<GetPathParamsType<T>>> {
  let url = `{{accountPath | path_to_template: ".pathParams"}}`
  let method = "{{accountOperation.method | upcase}}"

  if (isProjectPathParams(props.pathParams)) {
    url = `{{projectPath | path_to_template: ".pathParams"}}`
    method = "{{projectOperation.method | upcase}}"
  } else if (isOrgPathParams(props.pathParams)) {
    url = `{{orgPath | path_to_template: ".pathParams"}}`
    method = "{{orgOperation.method | upcase}}"
  }

  return fetcher<
    {{okResponseName}}<GetPathParamsType<T>>,
    {% if queryParamsCode -%}{{queryParamsName}}{% else %}unknown{%- endif %},
    {% if requestBodyCode %}{{requestBodyName}}{% else %}unknown{%- endif %}
    {% if headerParamsCode %},{{headerParamsName}}{%- endif %}
  >({
    url,
    method,
    ...props
  })
}
